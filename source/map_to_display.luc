module map_to_display (
    input tp_a[6], // position of particle
    input ep_a[6], // end position of a
    input map_a[6][6], // map_array
    input tp_b[6], // position of particle
    input ep_b[6], //end position of b
    input map_b[6][6], // map_array
    input fill_border_green,
    input fill_border_red,
    input slowclk,
    input show_splashscreen,
    
    output red[8][8],
    output green[8][8]
  ) {
  
  var x; // x-axis
  var y; // y-axis

  always {
  
    // Clear both sets of LEDS>
    
    green = {
      b00000000,
      b00000000,
      b00000000,
      b00000000,
      b00000000,
      b00000000,
      b00000000,
      b00000000       
    };
    
    red = {
      b00000000,
      b00000000,
      b00000000,
      b00000000,
      b00000000,
      b00000000,
      b00000000,
      b00000000 
    };
    
    // Port individual maps to main 8x8 matrix.
    for (x = 1; x <= 4; x++) {
      for (y = 1; y <= 4; y++) {
        red[y + 1][x + 3] = map_a[y][x];
        red[y + 1][x - 1] = map_b[y][x];
      }
    }
    
    // Show player locations.
    green[tp_a[2:0] + 1][tp_a[5:3] + 3] = 1;
    
    green[tp_b[2:0] + 1][tp_b[5:3] - 1] = 1;
    //red[tp_b[2:0] + 1][tp_b[5:3] - 1] = 1;
    
    // Show end locations.
    red[ep_a[2:0] + 1][ep_a[5:3] + 3] = 1;
    red[ep_b[2:0] + 1][ep_b[5:3] - 1] = 1;
    
    green[ep_a[2:0] + 1][ep_a[5:3] + 3] = 1;
    green[ep_b[2:0] + 1][ep_b[5:3] - 1] = 1;
    
       
    // Fill the border (area of the matrix hidden by the case)
    // if needed. 
    
    if (fill_border_green & slowclk) {
      green[0] = b11111111;
      green[1] = b11111111;
      green[6] = b11111111;
      green[7] = b11111111; 
    }
    
    if (fill_border_red) {
      red[0] = b11111111;
      red[1] = b11111111;
      red[6] = b11111111;
      red[7] = b11111111; 
    }
    
    if (show_splashscreen) {
        green = {
        b00000000,
        b00000000,
        b11100000,
        b01000000,
        b01000000,
        b01000000,
        b00000000,
        b00000000       
        };
      
      red = {
        b00000000,
        b00000000,
        b00000000,
        b00010101,
        b00010101,
        b00001010,
        b00000000,
        b00000000 
      };
    }
    
  }
}
